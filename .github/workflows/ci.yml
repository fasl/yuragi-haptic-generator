name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y portaudio19-dev
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "**/pyproject.toml"
    
    - name: Install dependencies
      working-directory: ./backend
      run: |
        uv venv
        uv pip install -e ".[dev,api]"
        uv pip install httpx
    
    - name: Lint with black
      working-directory: ./backend
      run: |
        uv run black --version
        uv run black --check src tests || (uv run black --diff src tests && exit 1)
    
    - name: Lint with ruff
      working-directory: ./backend
      run: |
        uv run ruff check src tests
    
    - name: Type check with mypy
      working-directory: ./backend
      run: |
        uv run mypy src --ignore-missing-imports || true
    
    - name: Test with pytest
      working-directory: ./backend
      run: |
        uv run pytest tests -v --cov=src/haptic_system --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build-frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'pnpm'
        cache-dependency-path: pnpm-lock.yaml
    
    - name: Install dependencies
      working-directory: ./frontend
      run: pnpm install --frozen-lockfile
    
    - name: Build
      working-directory: ./frontend
      run: pnpm build
    
    - name: Test
      working-directory: ./frontend
      run: pnpm test --run