name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,api]"
        pip install httpx
    
    - name: Lint with black
      working-directory: ./backend
      run: |
        black --check src tests
    
    - name: Lint with ruff
      working-directory: ./backend
      run: |
        ruff check src tests
    
    - name: Type check with mypy
      working-directory: ./backend
      run: |
        mypy src --ignore-missing-imports || true
    
    - name: Test with pytest
      working-directory: ./backend
      env:
        PYTHONPATH: /home/runner/work/yuragi-haptic-generator/yuragi-haptic-generator/backend/src
      run: |
        pytest tests -v --cov=src/haptic_system --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build-frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 10
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'pnpm'
        cache-dependency-path: pnpm-lock.yaml
    
    - name: Install dependencies
      working-directory: ./frontend
      run: pnpm install --frozen-lockfile
    
    - name: Build
      working-directory: ./frontend
      run: pnpm build
    
    - name: Test
      working-directory: ./frontend
      run: pnpm test --run