name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,test]"
    
    - name: Lint with black
      run: |
        black --check backend/src backend/tests
    
    - name: Lint with flake8
      run: |
        flake8 backend/src --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 backend/src --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Type check with mypy
      run: |
        mypy backend/src --ignore-missing-imports
    
    - name: Test with pytest
      run: |
        pytest backend/tests -v --cov=backend/src/haptic_system --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build-frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'pnpm'
        cache-dependency-path: frontend/pnpm-lock.yaml
    
    - name: Install dependencies
      working-directory: ./frontend
      run: pnpm install --frozen-lockfile
    
    - name: Build
      working-directory: ./frontend
      run: pnpm build
    
    - name: Test
      working-directory: ./frontend
      run: pnpm test --run